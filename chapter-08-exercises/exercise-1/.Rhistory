# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfast <- c("cereal", "toast")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(my_lunch, my_breakfast)
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("burger", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(my_lunch, my_breakfast)
# Add a "dinner" element to your `meals` list that has what you plan to eat
# for dinner
meals$dinner <- c("chicken", "rice")
# Use dollar notation to extract your `dinner` element from your list
# and save it in a vector called 'dinner'
meals$dinner <- dinner
# Use dollar notation to extract your `dinner` element from your list
# and save it in a vector called 'dinner'
dinner <- meals$dinner
# Use double-bracket notation to extract your `lunch` element from your list
# and save it in your list as the element at index 5 (no reason beyond practice)
dinner[5] <- meals[[lunch]]
# Use double-bracket notation to extract your `lunch` element from your list
# and save it in your list as the element at index 5 (no reason beyond practice)
dinner[5] <- meals[["lunch"]]
# Use double-bracket notation to extract your `lunch` element from your list
# and save it in your list as the element at index 5 (no reason beyond practice)
meals[[5]] <- meals[["lunch"]]
# Use single-bracket notation to extract your breakfast and lunch from your list
# and save them to a list called `early_meals`
early_meals <- list(meals[1:2])
# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfast <- c("cereal", "toast")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("burger", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(lunch = my_lunch, breakfast = my_breakfast)
# Add a "dinner" element to your `meals` list that has what you plan to eat
# for dinner
meals$dinner <- c("chicken", "rice")
# Use dollar notation to extract your `dinner` element from your list
# and save it in a vector called 'dinner'
dinner <- meals$dinner
# Use double-bracket notation to extract your `lunch` element from your list
# and save it in your list as the element at index 5 (no reason beyond practice)
meals[[5]] <- meals[["lunch"]]
# Use single-bracket notation to extract your breakfast and lunch from your list
# and save them to a list called `early_meals`
early_meals <- list(meals[1:2])
?lapply()
# Create a list that has the number of items you ate for each meal
# Hint: use the `lappy()` function to apply the `length()` function to each item
number <- list(lapply(meals, length))
new vector <- c(meal_vector, "pizza")
new_vector <- c(meal_vector, "pizza")
new_vector <- c(meal_vector, "pizza")
# Write a function `add_pizza` that adds pizza to a given meal vector, and
# returns the pizza-fied vector
add_pizza <- function(meal_vector){
new_vector <- c(meal_vector, "pizza")
return(new_vector)
}
add_pizza(c("nachos"))
# Create a vector `better_meals` that is all your meals, but with pizza!
better_meals <- lappy(meals, add_pizza)
# Create a vector `better_meals` that is all your meals, but with pizza!
better_meals <- lapply(meals, add_pizza)
View(add_pizza)
# Create a vector `better_meals` that is all your meals, but with pizza!
lapply(meals, add_pizza)
better_meals <-
# Create a vector `better_meals` that is all your meals, but with pizza!
better_meals <- lapply(meals, add_pizza)
intall.packages("stringr")
install.packages("stringr")
library("stringr")
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- pase("Employee", 1:100)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100,40000,50000)
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- patse("Employee", 1:100)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100,40000,50000)
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- patse("Employee", 1:100)
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", 1:100)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100,40000,50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salary_adjustments <- runif(100,-5000,10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries_2017, salary_adjustments, stringsAsFactors = FALSE)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salary_adjustments
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$raise <- salaries$salaries_2018 > salaries$salaries_2017
# What was the 2018 salary of Employee 57
salary_57 <- salaries[salaries$employees == "Employee 57", "salaries_2018"]
# How many employees got a raise?
nrow(salaries[salaries$got_raise == TRUE, ])
# How many employees got a raise?
nrow(salaries[salaries$raise == TRUE, ])
# What was the dollar value of the highest raise?
highest_raise <- max(salaries$salary_adjustments)
# What was the dollar value of the highest raise?
highest_raise <- max(salaries$salary_adjustments)
# What was the "name" of the employee who received the highest raise?
biggest_raise <- salaries[salary$salary_adjustments == highest_raise, "employees"]
# What was the "name" of the employee who received the highest raise?
biggest_raise <- salaries[salaries$salary_adjustments == highest_raise, "employees"]
# What was the largest decrease in salaries between the two years?
biggest_fall <- min(salaries$salary_adjustments)
# What was the "name" of the employee who received the highest raise?
biggest_raise_name <- salaries[salaries$salary_adjustments == highest_raise, "employees"]
# What was the largest decrease in salaries between the two years?
biggest_fall <- min(salaries$salary_adjustments)
# What was the name of the employee who recieved largest decrease in salary?
biggest_fall_name <- salaries[salaries$salary_adjustments == biggest_fall, "employees"]
# What was the average salary change?
avg_change <- mean(salaries$salary_adjustments)
# For people who did not get a raise, how much money did they lose on average?
avg_loss <- mean(salaries$salary_adjustments[salaries$got_raise == FALSE])
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "salaries.csv")
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", 1:100)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100,40000,50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salary_adjustments <- runif(100,-5000,10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries_2017, salary_adjustments, stringsAsFactors = FALSE)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salary_adjustments
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$raise <- salaries$salaries_2018 > salaries$salaries_2017
# What was the 2018 salary of Employee 57
salary_57 <- salaries[salaries$employees == "Employee 57", "salaries_2018"]
# How many employees got a raise?
nrow(salaries[salaries$raise == TRUE, ])
# What was the dollar value of the highest raise?
highest_raise <- max(salaries$salary_adjustments)
# What was the "name" of the employee who received the highest raise?
biggest_raise_name <- salaries[salaries$salary_adjustments == highest_raise, "employees"]
# What was the largest decrease in salaries between the two years?
biggest_fall <- min(salaries$salary_adjustments)
# What was the name of the employee who recieved largest decrease in salary?
biggest_fall_name <- salaries[salaries$salary_adjustments == biggest_fall, "employees"]
# What was the average salary change?
avg_change <- mean(salaries$salary_adjustments)
# For people who did not get a raise, how much money did they lose on average?
avg_loss <- mean(salaries$salary_adjustments[salaries$got_raise == FALSE])
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "salaries.csv")
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", 1:100)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100,40000,50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salary_adjustments <- runif(100,-5000,10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries_2017, salary_adjustments, stringsAsFactors = FALSE)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salary_adjustments
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$raise <- salaries$salaries_2018 > salaries$salaries_2017
# What was the 2018 salary of Employee 57
salary_57 <- salaries[salaries$employees == "Employee 57", "salaries_2018"]
# How many employees got a raise?
nrow(salaries[salaries$raise == TRUE, ])
# What was the dollar value of the highest raise?
highest_raise <- max(salaries$salary_adjustments)
# What was the "name" of the employee who received the highest raise?
biggest_raise_name <- salaries[salaries$salary_adjustments == highest_raise, "employees"]
# What was the largest decrease in salaries between the two years?
biggest_fall <- min(salaries$salary_adjustments)
# What was the name of the employee who recieved largest decrease in salary?
biggest_fall_name <- salaries[salaries$salary_adjustments == biggest_fall, "employees"]
# What was the average salary change?
avg_change <- mean(salaries$salary_adjustments)
# For people who did not get a raise, how much money did they lose on average?
avg_loss <- mean(salaries$salary_adjustments[salaries$raise == FALSE])
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "salaries.csv")
